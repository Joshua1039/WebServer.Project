<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:aop="http://www.springframework.org/schema/aop"	
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
 
    <!-- @responseBody 한글깨짐 처리 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			</list>
		</property>
		<property name="order" value="1" />
	</bean>
    
    <!-- aop  -->
    <aop:aspectj-autoproxy />
    
    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <!-- @Controller-->
	<context:component-scan base-package="com.modernwave.web.server" >
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<context:component-scan base-package="com.modernwave.web.server.framework" >
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
    <!-- Enables the Spring MVC @Controller programming model -->
    <!-- 
    <mvc:annotation-driven />
     -->
    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>
    <!-- log aop -->
	<bean id="methodLoggingAspect" class="com.modernwave.web.server.framework.aspect.LogginAspect" />

	<aop:config>
	    <aop:pointcut id="controllerMethod" expression="execution(* *..*Controller.*(..))" />
		<aop:pointcut id="serviceMethod" expression="execution(* *..*Service.*(..))" />
		<aop:pointcut id="daoMethod" expression="execution(* *..*Dao.*(..))" />
		<aop:aspect ref="methodLoggingAspect" >
			<aop:around method="controllerLogging" pointcut-ref="controllerMethod"/>
			<aop:around method="serviceLogging" pointcut-ref="serviceMethod"/>
			<aop:around method="daoLogging" pointcut-ref="daoMethod"/>
		</aop:aspect>
	</aop:config>
	
	
	<!-- messageSource결과 처리 -->
	<bean id="messageSourceAccessor" class="org.springframework.context.support.MessageSourceAccessor">
		<constructor-arg ref="messageSource" />
	</bean> 
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>			
				<value>/WEB-INF/resource/messages</value>
			</list>
		</property>
	</bean>
	
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
	
	<!-- tiles2 layout config -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">  
			<list>
				<value>/WEB-INF/resource/config/layout.xml</value>  
			</list>
		</property>
	</bean>
	
	
	<bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
	    <property name="order" value="1" />
	</bean>
	
	
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <property name="order" value="2" />
	    <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>
	
	<bean id="urlBasedViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <property name="order" value="3" />
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	    <property name="prefix" value="/WEB-INF/jsp/" />
	    <property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 
	<bean id="methodNameResolver" class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
		<property name="paramName" value="method" />
	</bean>
 	-->	
	<bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg>
			<value>D:/upload/temp/</value>
		</constructor-arg>
	</bean>
	
	<!-- 
	<bean id="paymentService" class="com.modernwave.web.server.service.impl.PaymentServiceImpl">
	    <constructor-arg ref="paymentDao"/>
	</bean>

	<bean id="paymentDao" class="com.seduri.mobile.server.dao.impl.PaymentDaoImpl">
	    <property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	 -->
	 
	<!--  
	 <bean id="paramInterceptor" class="com.modernwave.web.server.framework.interceptor.InputParamInterceptor">
		<property name="skipUrls">
			<list>
				<value>/mwts/login.do</value>
				<value>/mwts/loginProc.do</value>
			</list>
		</property>
	</bean>
	  -->
	 <!-- controller interceptor -->
	 <mvc:interceptors>
	     <bean class="com.modernwave.web.server.framework.interceptor.InputParamInterceptor">
	         <property name="skipUrls">
			<list>
				<value>/mwts/login.do</value>
				<value>/MWTS/config/upload.do</value>
				<value>/config/upload.do</value>
				<value>/mwts/loginProc.do</value>
				<value>/mwts/initAnalyIndividualEx.do</value>
				<value>/mwts/selectIndividualResult.do</value>
				<value>/mwts/selectMentIndividualResult.do</value>
			</list>
		</property>
	         </bean>
	     <!-- 
        <mvc:interceptor>  
            <mvc:mapping path="/*.do"/>
            <bean class="kr.seoul.amc.web.framework.interceptor.LoginCheckInterceptor" />  
        </mvc:interceptor>
         -->     
         
        <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
		</bean>

    </mvc:interceptors> 

	 
	<bean id="download" class="com.modernwave.web.server.framework.download.DownloadUtils" />
	
	<bean id="excelView" class="com.modernwave.web.server.framework.download.ExcelDownUtils" />
	
	<bean id="poiExcelView" class="com.modernwave.web.server.framework.download.POIExcelDownUtils" />
	
	<bean id="closeExcelView" class="com.modernwave.web.server.excel.view.CloseExcelDown" />
	<bean id="mainExcelView" class="com.modernwave.web.server.excel.view.MainExcelDown" />
	<bean id="monthExcelView" class="com.modernwave.web.server.excel.view.MonthExcelDown" />
	<bean id="indivisualExcelView" class="com.modernwave.web.server.excel.view.IndivisualExcelDown" />
</beans>
